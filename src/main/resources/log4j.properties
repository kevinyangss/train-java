<?xml version="1.0" encoding="UTF-8"?>
<!--日志级别以及优先级排序: OFF > FATAL > ERROR > WARN > INFO > DEBUG > TRACE > ALL -->
<!--Configuration后面的status，这个用于设置log4j2自身内部的信息输出，可以不设置，当设置成trace时，你会看到log4j2内部各种详细输出-->
<!--monitorInterval：Log4j能够自动检测修改配置 文件和重新配置本身，设置间隔秒数-->
<configuration status="DEBUG" monitorInterval="60" packages="com.odianyun.architecture.trace.log">
    <Properties>
        <!-- 格式化输出：%date表示日期，%thread表示线程名，%-5level：级别从左显示5个字符宽度 %msg：日志消息，%n是换行符 -->
        <!-- %logger{36} 表示 Logger 名字最长36个字符 -->
        <property name="LOG_PATTERN"
            value="%date{yyyy-MM-dd HH:mm:ss.SSS} %-5level [%thread] %logger{1.} - %msg%n" />
    </Properties>
    <!--先定义所有的appender-->
    <appenders>
        <!--这个输出控制台的配置-->
        <console name="Console" target="SYSTEM_OUT">
            <!--输出日志的格式-->
            <PatternLayout pattern="%date{yyyy-MM-dd HH:mm:ss.SSS} %-5level [%thread] %logger{1.} - %msg%n"/>
        </console>
        <!--文件会打印出所有信息，这个log每次运行程序会自动清空，由append属性决定，这个也挺有用的，适合临时测试用-->
        <File name="log" fileName="/data/logdir/oms/test/test.log" append="false">
            <PatternLayout pattern="%date{yyyy-MM-dd HH:mm:ss.SSS} %-5level [%thread] %logger{1.} - %msg%n"/>
        </File>
         
        <!-- 这个会打印出所有的info及以下级别的信息，每次大小超过size，则这size大小的日志会自动存入按年份-月份建立的文件夹下面并进行压缩，作为存档-->
        <!-- 这个会打印出所有的info及以下级别的信息，每次大小超过size，则这size大小的日志会自动存入按年份-月份建立的文件夹下面并进行压缩，作为存档-->
        <RollingFile fileName="/data/logdir/oms/oms-task/info/info.log" filePattern="/data/logdir/oms/oms-task/info/%d{yyyy-MM-dd}-info.log" name="RollingFileInfo">
            <!--控制台只输出level及以上级别的信息（onMatch），其他的直接拒绝（onMismatch）-->
            <ThresholdFilter level="info" onMatch="ACCEPT" onMismatch="DENY"/>
            <PatternLayout pattern="%date{yyyy-MM-dd HH:mm:ss.SSS} %-5level [%thread] %logger{1.} - %msg%n"/>
            <Policies>
                <TimeBasedTriggeringPolicy/>
                <SizeBasedTriggeringPolicy size="10MB"/>
            </Policies>
        </RollingFile>
        <RollingFile fileName="/data/logdir/oms/oms-task/warn/warn.log" filePattern="/data/logdir/oms/oms-task/warn/%d{yyyy-MM-dd}-warn.log" name="RollingFileInfo">
            <!--控制台只输出level及以上级别的信息（onMatch），其他的直接拒绝（onMismatch）-->
            <ThresholdFilter level="warn" onMatch="ACCEPT" onMismatch="DENY"/>
            <PatternLayout pattern="%date{yyyy-MM-dd HH:mm:ss.SSS} %-5level [%thread] %logger{1.} - %msg%n"/>
            <Policies>
                <TimeBasedTriggeringPolicy/>
                <SizeBasedTriggeringPolicy size="10MB"/>
            </Policies>
        </RollingFile>
        <RollingFile fileName="/data/logdir/oms/oms-task/debug/debug.log" filePattern="/data/logdir/oms/oms-task/debug/%d{yyyy-MM-dd}-debug.log" name="RollingFileInfo">
            <!--控制台只输出level及以上级别的信息（onMatch），其他的直接拒绝（onMismatch）-->
            <ThresholdFilter level="debug" onMatch="ACCEPT" onMismatch="DENY"/>
            <PatternLayout pattern="%date{yyyy-MM-dd HH:mm:ss.SSS} %-5level [%thread] %logger{1.} - %msg%n"/>
            <Policies>
                <TimeBasedTriggeringPolicy/>
                <SizeBasedTriggeringPolicy size="10MB"/>
            </Policies>
        </RollingFile>
        <RollingFile fileName="/data/logdir/oms/oms-task/error/error.log" filePattern="/data/logdir/oms/oms-task/error/%d{yyyy-MM-dd}-error.log" name="RollingFileInfo">
            <!--控制台只输出level及以上级别的信息（onMatch），其他的直接拒绝（onMismatch）-->
            <ThresholdFilter level="error" onMatch="ACCEPT" onMismatch="DENY"/>
            <PatternLayout pattern="%date{yyyy-MM-dd HH:mm:ss.SSS} %-5level [%thread] %logger{1.} - %msg%n"/>
            <Policies>
                <TimeBasedTriggeringPolicy/>
                <SizeBasedTriggeringPolicy size="10MB"/>
            </Policies>
        </RollingFile>
    </appenders>
      
     <!--然后定义logger，只有定义了logger并引入的appender，appender才会生效-->
    <loggers>
        <!--过滤掉spring和mybatis的一些无用的DEBUG信息-->
        <logger name="org.springframework" level="ERROR"></logger>
        <logger name="org.mybatis" level="DEBUG"></logger>
        <logger name="org.apache" level="ERROR"></logger>
        <logger name="net.sf" level="ERROR"></logger>
        <logger name="org.hibernate" level="ERROR"></logger>
        <logger name="org.quartz" level="ERROR"></logger>
        <logger name="org.crazycake" level="ERROR"></logger>
        <logger name="com.odianyun" level="INFO"></logger>
        <AsyncLogger name="com.odianyun" level="INFO" includeLocation="true" additivity="false">
         <appender-ref ref="RollingFileInfo"/>
          <appender-ref ref="RollingFileError"/>
         <appender-ref ref="Console"/>
        </AsyncLogger>
        <Root level="debug">
         <appender-ref ref="RollingFileInfo"/>
         <appender-ref ref="RollingFileDebug"/>
		 <appender-ref ref="RollingFileError"/>
         <appender-ref ref="Console"/>
        </Root>
    </loggers>
</configuration>